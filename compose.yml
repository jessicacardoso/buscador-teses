services:
  db:
    image: postgres:17.2-alpine
    restart: unless-stopped
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${DATA_DIR}/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  s3:
    image: quay.io/minio/minio:RELEASE.2024-12-13T22-19-12Z
    container_name: miniostorage
    restart: unless-stopped
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ${DATA_DIR}/minio/data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "mc ready local"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
  mlflow:
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    container_name: mlflow
    restart: unless-stopped
    ports:
      - 5000:5000
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://s3:9000
    volumes:
      - ${DATA_DIR}/mlflow:/mlflow
    entrypoint: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB} --default-artifact-root s3://${AWS_BUCKET_NAME} --artifacts-destination s3://${AWS_BUCKET_NAME}/ -h 0.0.0.0
    depends_on:
      db:
        condition: service_healthy
        restart: true
      s3:
        condition: service_healthy
        restart: true
  vector-db:
    image: chromadb/chroma:0.5.23
    container_name: chromadb
    restart: unless-stopped
    ports:
      - 8000:8000
    environment:
      CHROMA_SERVER_AUTHN_CREDENTIALS: ${CHROMA_SERVER_AUTHN_CREDENTIALS}
      CHROMA_SERVER_AUTHN_PROVIDER: ${CHROMA_SERVER_AUTHN_PROVIDER}
    volumes:
      - ${DATA_DIR}/chromadb/data:/chroma/chroma
